0000000_00000_00000_000_00100_0010011 //addi x4, x0, 0		# PC = 0 		x4 = 0
0000000_00000_00000_000_01000_0010011 //addi x8, x0, 0		# PC = 4		x8 = 0
0000000_00001_00000_000_01001_0010011 //addi x9, x0, 1		# PC = 8		x9 = 1
0000000_00000_00000_000_10001_0010011 //addi x17, x0, 0	# PC     = 12		x17 = 0
0000000_00001_00000_000_10010_0010011 //addi x18, x0, 1	# PC     = 16		x18 = 1
0000000_00000_00100_010_10000_0000011 //lw x16, 0(x4)   # PC     = 20	
0000000_00000_10000_000_10100_0010011 //addi x20, x16, 0 # PC     = 24	     save input value in x20
0100000_01001_10000_000_10000_0110011 //sub x16, x16, x9          # PC  = 28	subu x16, 1 (loop:)
0000000_10010_10001_000_10001_0110011 //add x17, x17, x18          # PC = 32
0000000_00000_10010_000_10011_0010011 //addi x19, x18, 0  	      # PC  = 36	  move x19, x18
0000000_00000_10001_000_10010_0010011 //addi x18, x17, 0	       # PC = 40	 move x18, x17
0000000_00000_10011_000_10001_0010011 //addi x17, x19, 0	   # PC     = 44  move x17, x19
0000000_01000_10000_000_01000_1100011 //beq x16, x8, finish   # PC      = 48  bne x16, zero, loop
1111111_00000_00000_000_01001_1100011 //beq x0, x0, loop                    # PC  = 52
0000000_10001_00100_010_00100_0100011 //sw x17, 4(x4)# PC     = 56	 finish:
0000000_00000_10001_111_01010_0110011 //and x10, x17, x0         # PC = 60	
0000000_00000_10001_000_01011_0110011 //add x11, x17, x0          # PC = 64	
0000000_01100_10001_000_01100_0110011 //add x12, x17, x12         # PC = 68	
0100000_01100_10001_000_01101_0110011 //sub x13, x17, x12         # PC = 72	
0000001_01100_10001_000_01110_0110011 //mul x14, x17, x12         # PC = 76	
0000000_01010_00100_010_01000_0100011 //sw x10, 8(x4)            # PC = 80	
0000000_01011_00100_010_01100_0100011 //sw x11, 12(x4)           # PC = 84	
0000000_01100_00100_010_10000_0100011 //sw x12, 16(x4)           # PC = 88	
0000000_01101_00100_010_10100_0100011 //sw x13, 20(x4)           # PC = 92	
0000000_01110_00100_010_11000_0100011 //sw x14, 24(x4)           # PC = 96	
